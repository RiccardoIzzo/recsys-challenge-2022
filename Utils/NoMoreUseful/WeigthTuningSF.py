import numpy as np
import pandas as pd

from Data_manager.split_functions.split_train_validation_random_holdout import split_train_in_two_percentage_global_sample
from scipy.sparse import coo_matrix
from sklearn.preprocessing import normalize
from Recommenders.NonPersonalizedRecommender import TopPop
from Evaluation.Evaluator import EvaluatorHoldout

n_users = 41629
n_items = 24507

# icms = ['Complete_ICM_length_max.csv', 'Complete_ICM_length_all_1.csv', 'Complete_ICM_length_mean_tot.csv']
master_df = pd.read_csv(filepath_or_buffer='../data/Master_df_old.csv', engine='python')
urm = pd.read_csv(filepath_or_buffer='../data/URM_df.csv', engine='python')
res = []

scoring_function = [4]

# data_loader = DataLoaderSplit(urm='interactionScored.csv')
for sf in scoring_function:

	res.append(sf)

	w_0 = 0.6
	w_1 = 0.4

	for i in range(1):

		if sf == 0:
			scores = ((master_df.n_0 / master_df.ep_tot) * master_df.n_0 * w_0) +\
					  ((master_df.avg_watched_ep / master_df.ep_tot) * w_1 * master_df.n_1)

		elif sf == 1:
			scores = (master_df.n_0 * w_0) + (w_1 * master_df.n_1)

		elif sf == 2:
			scores = (((master_df.n_0 / master_df.ep_tot) * master_df.n_0 * w_0) +
					  ((master_df.avg_watched_ep / master_df.ep_tot) * w_1 * master_df.n_1)) * \
					 ((master_df.fav_type == master_df.type) / 2 + 1)
		elif sf == 3:
			scores = ((master_df.n_0 / master_df.ep_tot) * w_0) + (w_1 * master_df.n_1)

		elif sf == 4:
			scores = ((master_df.n_0 / master_df.ep_tot) * w_0) + ((master_df.avg_watched_ep / master_df.ep_tot)
																		   * w_1 * master_df.n_1)


		urm['data'] = scores

		URM_coo = coo_matrix((urm['data'], (urm['user_id'], urm['item_id'])), shape=(n_users, n_items))
		URM_csr = URM_coo.tocsr()
		URM_csr = normalize(URM_csr, norm='l2', axis=1)
		URM, URM_test = split_train_in_two_percentage_global_sample(URM_csr, train_percentage=0.80)

		best_hyperparams_ItemKNNCF = {'topK': 135,
									  'shrink': 257,
									  'similarity': 'cosine',
									  'normalize': True,
									  'feature_weighting': 'TF-IDF'}
		from Recommenders.KNN.ItemKNNCFRecommender import ItemKNNCFRecommender

		recommender = ItemKNNCFRecommender(URM_train=URM)
		recommender.fit(**best_hyperparams_ItemKNNCF)

		evaluator_validation = EvaluatorHoldout(URM_test, cutoff_list=[10], verbose=True)
		result_dict, _ = evaluator_validation.evaluateRecommender(recommender)
		res.append([result_dict.MAP.item(), w_0, w_1])
		print(result_dict.MAP.item(), w_0, w_1)



# ############################# RESULTS

# [0.012764558585150297, 0.05, 0.9500000000000001]
# [0.012621587985421616, 0.1, 0.9]
# [0.012910674330403115, 0.15, 0.85]
# [0.012960386852861928, 0.2, 0.8]
# [0.012738679299296023, 0.25, 0.75]
# [0.012600161836936094, 0.3, 0.7000000000000001]
# [0.012466578374432416, 0.35000000000000003, 0.65]
# [0.012801851909500974, 0.4, 0.6]
# [0.012789728949200515, 0.45, 0.55]
# [0.012696027193982636, 0.5, 0.5]
# [0.012897646971550878, 0.55, 0.45]
# [0.012836892409737309, 0.6, 0.4]
# [0.012695749711510114, 0.65, 0.35000000000000003]
# [0.012863826434528937, 0.7000000000000001, 0.3]
# [0.012844893735869861, 0.75, 0.25]
# [0.012339846196439956, 0.8, 0.2]
# [0.01278988218213265, 0.85, 0.15]
# [0.012855893020938083, 0.9, 0.1]
# [0.012894161700583955, 0.9500000000000001, 0.05]
#
#
#
#
#
#
# Complete_ICM_length_max.csv
# [0.012694666723558134, 0.05, 0.9500000000000001]
# [0.012713911454016888, 0.1, 0.9]
# [0.01248727428632987, 0.15, 0.85]
# [0.01244027729736001, 0.2, 0.8]
# [0.012727205986359732, 0.25, 0.75]
# [0.012749286048770483, 0.3, 0.7000000000000001]
# [0.012721185070394839, 0.35000000000000003, 0.65]
# [0.012680564156915295, 0.4, 0.6]
# [0.012778374825253605, 0.45, 0.55]
# [0.01263007017321465, 0.5, 0.5]
# [0.012998303493109351, 0.55, 0.45]
# [0.012556510858158105, 0.6, 0.4]
# [0.012530271831594149, 0.65, 0.35000000000000003]
# [0.012837528885629262, 0.7000000000000001, 0.3]
# [0.012694696993276359, 0.75, 0.25]
# [0.012641836078405522, 0.8, 0.2]
# [0.012906273849296912, 0.85, 0.15]
# [0.012965847655935106, 0.9, 0.1]
# [0.012712289055367155, 0.9500000000000001, 0.05]


# Complete_ICM_length_all_1.csv
# [0.01263854103245364, 0.05, 0.9500000000000001]
# [0.012690110646642189, 0.1, 0.9]
# [0.01266409401360807, 0.15, 0.85]
# [0.01274436368402839, 0.2, 0.8]
# [0.012622392382244486, 0.25, 0.75]
# [0.012680155581055947, 0.3, 0.7000000000000001]
# [0.012737836835694781, 0.35000000000000003, 0.65]
# [0.012652126327874647, 0.4, 0.6]
# [0.012600643927473808, 0.45, 0.55]
# [0.01278508723917106, 0.5, 0.5]
# [0.013019218335078839, 0.55, 0.45] <-------------------------
# [0.0128413951009631, 0.6, 0.4]
# [0.012950508452953782, 0.65, 0.35000000000000003]
# [0.012823088515365812, 0.7000000000000001, 0.3]
# [0.012572528196500024, 0.75, 0.25]
# [0.0127873810560863, 0.8, 0.2]
# [0.012571673064195751, 0.85, 0.15]
# [0.012590658046756254, 0.9, 0.1]
# [0.012789214268623698, 0.9500000000000001, 0.05]


# Complete_ICM_length_mean_tot.csv
# [0.012750269995003971, 0.05, 0.9500000000000001]
# [0.012564077204824026, 0.1, 0.9]
# [0.012885472437527355, 0.15, 0.85]
# [0.012873386143469246, 0.2, 0.8]
# [0.01276393295283641, 0.25, 0.75]
# [0.012663128448495787, 0.3, 0.7]
# [0.012914146202128718, 0.35, 0.65]
# [0.012695246165286448, 0.4, 0.6]
# [0.012817812833425691, 0.45, 0.55]
# [0.012757181935448522, 0.5, 0.5]
# [0.012548378108305877, 0.55, 0.45]
# [0.012712131719498379, 0.6, 0.4]
# [0.012735617060466714, 0.65, 0.35000000000000003]
# [0.012717180908709212, 0.7000000000000001, 0.3]
# [0.012829526798054816, 0.75, 0.25]
# [0.01260112145180088, 0.8, 0.2]
# [0.012652371651936183, 0.85, 0.15]
# [0.012500039390474102, 0.9, 0.1]
# [0.012641669998429543, 0.9500000000000001, 0.05]


# NEW SCORE FUNCTION (WITHOUT FACTORS)
#
# Complete_ICM_length_max.csv
# [0.006417588418364391, 0.0, 1.0]
# [0.012891850304002823, 0.1, 0.9]
# [0.012571454316231854, 0.2, 0.8]
# [0.01264935449223101, 0.30000000000000004, 0.7000000000000001]
# [0.01263717871603983, 0.4, 0.6000000000000001]
# [0.012721886917388986, 0.5, 0.5]
# [0.012630967367096336, 0.6000000000000001, 0.4]
# [0.012765893178789752, 0.7000000000000001, 0.30000000000000004]
# [0.012569598827858089, 0.8, 0.2]
# [0.012880325192566737, 0.9, 0.1]
# [0.010931441102861423, 1.0, 0.0]


# Complete_ICM_length_all_1.csv
# [0.006305550534760302, 0.0, 1.0]
# [0.012828219356474782, 0.1, 0.9]
# [0.012765273138960457, 0.2, 0.8]
# [0.012666234111817207, 0.30000000000000004, 0.7000000000000001]
# [0.012912549809834754, 0.4, 0.6000000000000001]
# [0.012765331348822365, 0.5, 0.5]
# [0.012600695152598602, 0.6000000000000001, 0.4]
# [0.012635925813193597, 0.7000000000000001, 0.30000000000000004]
# [0.012851025812373814, 0.8, 0.2]
# [0.012609974523840623, 0.9, 0.1]
# [0.011029256710173144, 1.0, 0.0]


# Complete_ICM_length_mean_tot.csv
# [0.0062318436303006874, 0.0, 1.0]
# [0.012809174719922147, 0.1, 0.9]
# [0.012800963934182225, 0.2, 0.8]
# [0.01298300291286448, 0.30000000000000004, 0.7000000000000001]
# [0.01273903777287428, 0.4, 0.6000000000000001]
# [0.01278962834589044, 0.5, 0.5]
# [0.012730500010953633, 0.6000000000000001, 0.4]
# [0.012771670332095416, 0.7000000000000001, 0.30000000000000004]
# [0.012640415805674243, 0.8, 0.2]
# [0.012796052745337736, 0.9, 0.1]
# [0.010875977641227507, 1.0, 0.0]
#
# SQRT SCORING
# [0.01282826711349772, 0.1, 0.9]
# [0.01275034664919908, 0.2, 0.8]
# [0.01278500901457107, 0.30000000000000004, 0.7000000000000001]
# [0.0128608142505368, 0.4, 0.6000000000000001]
# [0.012652202710976066, 0.5, 0.5]
# [0.012530284296147139, 0.6000000000000001, 0.4]
# [0.012637685092672027, 0.7000000000000001, 0.30000000000000004]
# [0.0124887868939152, 0.8, 0.2]
# [0.012855809402289533, 0.9, 0.1]




# SQUARE
# [0.012815181963037391, 0.1, 0.9]
# [0.012457396576517153, 0.2, 0.8]
# [0.012680224827683578, 0.30000000000000004, 0.7000000000000001]
# [0.012737302221715012, 0.4, 0.6000000000000001]
# [0.012824003158083155, 0.5, 0.5]
# [0.012803592071557578, 0.6000000000000001, 0.4]
# [0.012793330082021043, 0.7000000000000001, 0.30000000000000004]
# [0.012483933284216975, 0.8, 0.2]
# [0.01267027890240006, 0.9, 0.1]

# INIZIALE + SHRINK TERM
# [0.012667317181196276, 0.55, 0.45, 1]
# [0.012872837766568548, 0.55, 0.45, 10]
# [0.012949426425616703, 0.55, 0.45, 100]
# [0.012645972378907135, 0.55, 0.45, 500]
# [0.012718246764947047, 0.55, 0.45, 100]
# [0.012876259116882319, 0.55, 0.45, 250]
# [0.012951167520143818, 0.55, 0.45, 1000]
# [0.012718246764947047, 0.55, 0.45, 100]
# [0.012876259116882319, 0.55, 0.45, 250]
# [0.012951167520143818, 0.55, 0.45, 1000]




# 0
# [0.024095099906900216, 0.05, 0.9500000000000001]
# [0.025148080884181967, 0.1, 0.9]
# [0.025596833310475246, 0.15000000000000002, 0.8500000000000001]
# [0.025545591483808937, 0.2, 0.8]
# [0.025523599236815207, 0.25, 0.75]
# [0.02578062216872337, 0.30000000000000004, 0.7000000000000001]
# [0.025676465455740954, 0.35000000000000003, 0.65]
# [0.025781047107943853, 0.4, 0.6000000000000001]
# [0.025388313559754207, 0.45, 0.55]
# [0.02503650674570462, 0.5, 0.5]
# [0.025062255783871067, 0.55, 0.45]
# [0.024978482672959545, 0.6000000000000001, 0.4]
# [0.02506960317268146, 0.65, 0.35000000000000003]
# [0.024662598485721474, 0.7000000000000001, 0.30000000000000004]
# [0.024205814680591114, 0.75, 0.25]
# [0.024393209246737404, 0.8, 0.2]
# [0.023806333224611058, 0.8500000000000001, 0.15000000000000002]
# [0.023795373692128936, 0.9, 0.1]
# [0.02307439213118847, 0.9500000000000001, 0.05]

# 1
# [0.027837144494367274, 0.05, 0.9500000000000001]
# [0.02887786878916308, 0.1, 0.9]
# [0.02939614658493924, 0.15000000000000002, 0.8500000000000001]
# [0.03001129508820952, 0.2, 0.8]
# [0.030341254081263286, 0.25, 0.75]
# [0.03036873178450321, 0.30000000000000004, 0.7000000000000001]
# [0.030758541056013125, 0.35000000000000003, 0.65]
# [0.03082328898174951, 0.4, 0.6000000000000001]
# [0.030731158120913284, 0.45, 0.55]
# [0.030620915484836593, 0.5, 0.5]
# [0.031089156839936145, 0.55, 0.45]
# [0.030840673806026484, 0.6000000000000001, 0.4]
# [0.0307056703565178, 0.65, 0.35000000000000003]
# [0.031080422921787736, 0.7000000000000001, 0.30000000000000004]
# [0.031048427735277433, 0.75, 0.25]
# [0.030820250195914497, 0.8, 0.2]
# [0.03066478103017277, 0.8500000000000001, 0.15000000000000002]
# [0.030660238541367252, 0.9, 0.1]
# [0.03038042112929456, 0.9500000000000001, 0.05]

# 2
# [0.02322913087724672, 0.05, 0.9500000000000001]
# [0.024546593637656294, 0.1, 0.9]
# [0.02503296948703229, 0.15000000000000002, 0.8500000000000001]
# [0.024877594131949805, 0.2, 0.8]
# [0.025053546724310722, 0.25, 0.75]
# [0.025423152100241073, 0.30000000000000004, 0.7000000000000001]
# [0.025366325252440928, 0.35000000000000003, 0.65]
# [0.025030345414997573, 0.4, 0.6000000000000001]
# [0.024735798561261086, 0.45, 0.55]
# [0.024437267610483752, 0.5, 0.5]
# [0.02419925439102142, 0.55, 0.45]
# [0.02417672249674226, 0.6000000000000001, 0.4]
# [0.023849410838995187, 0.65, 0.35000000000000003]
# [0.023742538206801854, 0.7000000000000001, 0.30000000000000004]
# [0.023695193849763308, 0.75, 0.25]
# [0.02343332265684689, 0.8, 0.2]
# [0.022863513818932875, 0.8500000000000001, 0.15000000000000002]
# [0.022349325297861267, 0.9, 0.1]
# [0.022181174664653, 0.9500000000000001, 0.05]

